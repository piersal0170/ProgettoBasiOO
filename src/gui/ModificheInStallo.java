package gui;

import controller.Controller;

import javax.swing.*;
import javax.swing.text.BadLocationException;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;

public class ModificheInStallo {
    private JPanel panel1;
    private JButton okButton;
    private JButton backButton;
    private JPanel modificaPanel;
    private JLabel modificaLabel;
    private JTextArea textArea1;

    public JFrame frame;
    private int index = 0;

    public ModificheInStallo(JFrame frameChiamante, Controller controller) {
        frame = new JFrame("Modifiche in stallo");
        frame.setContentPane(panel1);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        textArea1.setEditable(false);
        textArea1.setFocusable(false);
        ArrayList<String> proposte = controller.listaProposte;
        textArea1.append(proposte.get(index));

        frame.pack();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screenSize.width - frame.getWidth()) / 2;
        int y = (screenSize.height - frame.getHeight()) / 2;
        frame.setLocation(x, y);
        frame.setVisible(true);

        okButton.setEnabled(true);
        backButton.setEnabled(true);

        okButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int confirmChoice = JOptionPane.showConfirmDialog(frame, "Vuoi accettare la modifica di questa frase?");
                boolean prova;
                boolean update;
                if (confirmChoice == JOptionPane.YES_OPTION) {
                    prova = true;
                    update = controller.updateModifica(index, prova);
                    if (update) {
                        JOptionPane.showMessageDialog(frame, "Modifica accettata correttamente");
                        index++;
                        if (index < proposte.size()) {
                            System.out.println(proposte.get(index) + " index: " + index);
                            textArea1.setText(proposte.get(index));
                            frame.pack();
                        } else {
                            frameChiamante.setVisible(true);
                            frame.setVisible(false);
                            frame.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(frame, "Errore", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (confirmChoice == JOptionPane.NO_OPTION) {
                    prova = false;
                    update = controller.updateModifica(index, prova);
                    if (update) {
                        JOptionPane.showMessageDialog(frame, "Modifica rifiutata correttamente");
                        index++;
                        if (index < proposte.size()) {
                            System.out.println(proposte.get(index) + " index: " + index);
                            textArea1.setText(proposte.get(index));
                            frame.pack();
                        } else {
                            frameChiamante.setVisible(true);
                            frame.setVisible(false);
                            frame.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(frame, "Errore", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        });
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frameChiamante.setVisible(true);
                frame.setVisible(false);
                frame.dispose();
            }
        });

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        modificaPanel = new JPanel();
        modificaPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(modificaPanel);
        modificaLabel = new JLabel();
        modificaLabel.setText("Modifiche proposte");
        modificaPanel.add(modificaLabel);
        textArea1 = new JTextArea();
        modificaPanel.add(textArea1);
        okButton = new JButton();
        okButton.setText("Ok");
        panel1.add(okButton);
        backButton = new JButton();
        backButton.setText("Back");
        panel1.add(backButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
