package gui;

import controller.Controller;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.util.*;
import java.util.List;

public class TimestampPagina {
    private JPanel panel1;
    private JPanel panelModifica;
    private JLabel labelModifica;
    private JList list1;
    private JButton okButton;
    private JButton backButton;

    public JFrame frame;

    public TimestampPagina(JFrame frameChiamante, Controller controller) {
        frame = new JFrame(controller.getNomeUtente());
        frame.setContentPane(panel1);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        DefaultListModel modelloLista = new DefaultListModel();
        Map<String, Timestamp> versioni = controller.versioni;
        if (!versioni.isEmpty()) {
            TreeSet<String> versioniOrdinate = new TreeSet<>(versioni.keySet());
            modelloLista.addAll(versioniOrdinate);
        } else {
            JOptionPane.showMessageDialog(frame, "errore");
        }

        list1.setModel(modelloLista);
        frame.pack();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screenSize.width - frame.getWidth()) / 2;
        int y = (screenSize.height - frame.getHeight()) / 2;
        frame.setLocation(x, y);
        frame.setVisible(true);

        okButton.setEnabled(true);
        backButton.setEnabled(true);

        okButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (list1.getSelectedIndices().length == 0) {
                    JOptionPane.showMessageDialog(frame, "Seleziona almeno un elemento.", "Attenzione", JOptionPane.WARNING_MESSAGE);
                } else {
                    CronologiaFrasi cronologiaFrasi = new CronologiaFrasi(frame, controller, list1.getSelectedValue().toString(), "Storico pagina");
                    cronologiaFrasi.frame.setVisible(true);
                    frame.setVisible(false);
                }
            }
        });

        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frameChiamante.setVisible(true);
                frame.setVisible(false);
                frame.dispose();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panelModifica = new JPanel();
        panelModifica.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(panelModifica);
        labelModifica = new JLabel();
        labelModifica.setText("Seleziona una modifica");
        panelModifica.add(labelModifica);
        list1 = new JList();
        panelModifica.add(list1);
        okButton = new JButton();
        okButton.setText("Ok");
        panel1.add(okButton);
        backButton = new JButton();
        backButton.setText("Back");
        panel1.add(backButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
